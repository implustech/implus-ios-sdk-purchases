// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Subscriber.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BillingIssue;
@class Entitlement;
@class ProductGroup;
@class ProductGroup_Product;
@class ProductInfo;
@class ProductInfo_Discount;
@class Subscription;
@class SubscriptionState;
@class Subscription_OriginalTransaction;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum StoreType

typedef GPB_ENUM(StoreType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  StoreType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** ios app store */
  StoreType_Appstore = 0,

  /** google play */
  StoreType_Googleplay = 1,
};

GPBEnumDescriptor *StoreType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL StoreType_IsValidValue(int32_t value);

#pragma mark - Enum SubscriptionState_State

/** State definitions for subscription products. */
typedef GPB_ENUM(SubscriptionState_State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SubscriptionState_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * Not currently used
   * The receipt is out of date or there is another purchase issue.
   **/
  SubscriptionState_State_MissingPurchInfo = 0,

  /**
   * The receipt is expired but the subscription is still in a billing-retry state.
   * If grace period is enabled, this state excludes subscriptions in grace period.
   **/
  SubscriptionState_State_ExpiredInRetry = -1,

  /** The receipt is fully expired due to a billing issue. */
  SubscriptionState_State_ExpiredFromBilling = -2,

  /** The customer did not accept the price increase. */
  SubscriptionState_State_FailToAcceptIncrease = -3,

  /** The product is no longer available. */
  SubscriptionState_State_ProdNotAvailable = -4,

  /** The customer intentionally cancelled the subscription. */
  SubscriptionState_State_ExpVoluntarily = -5,

  /** The system canceled the subscription because the customer upgraded. */
  SubscriptionState_State_Upgraded = -6,

  /** The customer received a refund due to a perceived issue with the app. */
  SubscriptionState_State_IssueRefund = -7,

  /** The customer received a refund for the subscription. */
  SubscriptionState_State_OtherRefund = -8,

  /** The receipt is expired and have been paused */
  SubscriptionState_State_ExpiredWithPause = -9,

  /** The subscription is active and have been paused */
  SubscriptionState_State_ActiveButPause = 6,

  /** The subscription is active and auto-renew is on. */
  SubscriptionState_State_ActiveAutoRenOn = 5,

  /** The subscription is active and auto-renew is off. */
  SubscriptionState_State_ActiveAutoRenOff = 4,

  /** The subscription is a non-renewing subscription. */
  SubscriptionState_State_NonRenSub = 3,

  /** The subscription is an off-platform subscription. */
  SubscriptionState_State_OffPlatformSub = 2,

  /** The subscription expired, but is in grace period. */
  SubscriptionState_State_ExpiredInGrace = 1,
};

GPBEnumDescriptor *SubscriptionState_State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SubscriptionState_State_IsValidValue(int32_t value);

#pragma mark - Enum SubscriptionState_SubState

/** Substate definitions for subscription products. */
typedef GPB_ENUM(SubscriptionState_SubState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SubscriptionState_SubState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Subscription product is in the standard state. */
  SubscriptionState_SubState_StandardSub = 0,

  /** Subscription is in the free-trial offer state. */
  SubscriptionState_SubState_FreeTrial = 1,

  /** Subscription is in the introductory offer state. */
  SubscriptionState_SubState_Introductory = 2,

  /** Subscription is in a subscription offer state. */
  SubscriptionState_SubState_SubOffer = 3,
};

GPBEnumDescriptor *SubscriptionState_SubState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SubscriptionState_SubState_IsValidValue(int32_t value);

#pragma mark - SubscriberRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SubscriberRoot : GPBRootObject
@end

#pragma mark - ReceiptRequest

typedef GPB_ENUM(ReceiptRequest_FieldNumber) {
  ReceiptRequest_FieldNumber_AppUserId = 1,
  ReceiptRequest_FieldNumber_Receipt = 2,
  ReceiptRequest_FieldNumber_SubscriptionId = 3,
  ReceiptRequest_FieldNumber_ProductInfoArray = 4,
};

GPB_FINAL @interface ReceiptRequest : GPBMessage

/** up to 64 chars. See userID properties for more information. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appUserId;

/** For iOS, the base64 encoded receipt file, for Android the purchase token. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receipt;

/** Android only */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subscriptionId;

/** iOS only, product list */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProductInfo*> *productInfoArray;
/** The number of items in @c productInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger productInfoArray_Count;

@end

#pragma mark - ProductInfo

typedef GPB_ENUM(ProductInfo_FieldNumber) {
  ProductInfo_FieldNumber_ProductId = 1,
  ProductInfo_FieldNumber_Currency = 2,
  ProductInfo_FieldNumber_RegularPrice = 3,
  ProductInfo_FieldNumber_IntroductoryPrice = 4,
  ProductInfo_FieldNumber_DiscountsArray = 5,
};

GPB_FINAL @interface ProductInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *productId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *currency;

/** The price of the product in the local currency */
@property(nonatomic, readwrite) float regularPrice;

/** The introductory price of the product in the local currency */
@property(nonatomic, readwrite) float introductoryPrice;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProductInfo_Discount*> *discountsArray;
/** The number of items in @c discountsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger discountsArray_Count;

@end

#pragma mark - ProductInfo_Discount

typedef GPB_ENUM(ProductInfo_Discount_FieldNumber) {
  ProductInfo_Discount_FieldNumber_DiscountId = 1,
  ProductInfo_Discount_FieldNumber_DiscountPrice = 2,
};

GPB_FINAL @interface ProductInfo_Discount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *discountId;

@property(nonatomic, readwrite) float discountPrice;

@end

#pragma mark - SubscriberRequest

typedef GPB_ENUM(SubscriberRequest_FieldNumber) {
  SubscriberRequest_FieldNumber_AppUserId = 1,
  SubscriberRequest_FieldNumber_Receipt = 2,
  SubscriberRequest_FieldNumber_SubscriptionId = 3,
};

GPB_FINAL @interface SubscriberRequest : GPBMessage

/** up to 64 chars */
@property(nonatomic, readwrite, copy, null_resettable) NSString *appUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *receipt;

/** Android only */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subscriptionId;

@end

#pragma mark - Entitlement

typedef GPB_ENUM(Entitlement_FieldNumber) {
  Entitlement_FieldNumber_Id_p = 1,
  Entitlement_FieldNumber_IsActive = 2,
  Entitlement_FieldNumber_ExpireAt = 3,
  Entitlement_FieldNumber_ProductId = 4,
};

GPB_FINAL @interface Entitlement : GPBMessage

/** product group id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** true if entitlemen is accessable */
@property(nonatomic, readwrite) BOOL isActive;

/** expire at (millisecond) */
@property(nonatomic, readwrite) int64_t expireAt;

@property(nonatomic, readwrite, copy, null_resettable) NSString *productId;

@end

#pragma mark - Subscription

typedef GPB_ENUM(Subscription_FieldNumber) {
  Subscription_FieldNumber_Store = 1,
  Subscription_FieldNumber_ProductId = 2,
  Subscription_FieldNumber_State = 3,
  Subscription_FieldNumber_ExpireAt = 4,
  Subscription_FieldNumber_CancelAt = 5,
  Subscription_FieldNumber_TotalRenewals = 6,
  Subscription_FieldNumber_TrialConsumed = 7,
  Subscription_FieldNumber_GroupId = 8,
  Subscription_FieldNumber_WillRenewTo = 9,
  Subscription_FieldNumber_PromotionalOfferId = 10,
  Subscription_FieldNumber_ConsumedPromoOffers = 11,
  Subscription_FieldNumber_OriginalTransactionsArray = 12,
  Subscription_FieldNumber_BillingIssue = 13,
};

GPB_FINAL @interface Subscription : GPBMessage

@property(nonatomic, readwrite) StoreType store;

@property(nonatomic, readwrite, copy, null_resettable) NSString *productId;

@property(nonatomic, readwrite, strong, null_resettable) SubscriptionState *state;
/** Test to see if @c state has been set. */
@property(nonatomic, readwrite) BOOL hasState;

/** expire at (millisecond) */
@property(nonatomic, readwrite) int64_t expireAt;

/** when user cancel the subscription (millisecond) */
@property(nonatomic, readwrite) int64_t cancelAt;

@property(nonatomic, readwrite) int32_t totalRenewals;

@property(nonatomic, readwrite) BOOL trialConsumed;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *willRenewTo;

/** indicate the promotional offer that is in effect */
@property(nonatomic, readwrite, copy, null_resettable) NSString *promotionalOfferId;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringInt32Dictionary *consumedPromoOffers;
/** The number of items in @c consumedPromoOffers without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger consumedPromoOffers_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Subscription_OriginalTransaction*> *originalTransactionsArray;
/** The number of items in @c originalTransactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger originalTransactionsArray_Count;

/** if there's billing issue */
@property(nonatomic, readwrite, strong, null_resettable) BillingIssue *billingIssue;
/** Test to see if @c billingIssue has been set. */
@property(nonatomic, readwrite) BOOL hasBillingIssue;

@end

/**
 * Fetches the raw value of a @c Subscription's @c store property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Subscription_Store_RawValue(Subscription *message);
/**
 * Sets the raw value of an @c Subscription's @c store property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSubscription_Store_RawValue(Subscription *message, int32_t value);

#pragma mark - Subscription_OriginalTransaction

typedef GPB_ENUM(Subscription_OriginalTransaction_FieldNumber) {
  Subscription_OriginalTransaction_FieldNumber_OriginalTxid = 1,
  Subscription_OriginalTransaction_FieldNumber_StartAt = 2,
  Subscription_OriginalTransaction_FieldNumber_ExpireAt = 3,
  Subscription_OriginalTransaction_FieldNumber_Renewals = 4,
};

GPB_FINAL @interface Subscription_OriginalTransaction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *originalTxid;

/** ms */
@property(nonatomic, readwrite) int64_t startAt;

/** ms */
@property(nonatomic, readwrite) int64_t expireAt;

@property(nonatomic, readwrite) int32_t renewals;

@end

#pragma mark - BillingIssue

typedef GPB_ENUM(BillingIssue_FieldNumber) {
  BillingIssue_FieldNumber_Code = 1,
  BillingIssue_FieldNumber_FailAt = 2,
  BillingIssue_FieldNumber_Reason = 3,
};

GPB_FINAL @interface BillingIssue : GPBMessage

/** error code, 0 means no failure. */
@property(nonatomic, readwrite) int32_t code;

/** fail to pay the bill at (millisecond), for example: credit card issues. should let user know. */
@property(nonatomic, readwrite) int64_t failAt;

/** error message */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;

@end

#pragma mark - Subscriber

typedef GPB_ENUM(Subscriber_FieldNumber) {
  Subscriber_FieldNumber_EntitlementsArray = 1,
  Subscriber_FieldNumber_SubscriptionsArray = 2,
};

GPB_FINAL @interface Subscriber : GPBMessage

/** check entitlement for current status */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Entitlement*> *entitlementsArray;
/** The number of items in @c entitlementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger entitlementsArray_Count;

/** subscription details group by product_id */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Subscription*> *subscriptionsArray;
/** The number of items in @c subscriptionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger subscriptionsArray_Count;

@end

#pragma mark - SubscriptionState

typedef GPB_ENUM(SubscriptionState_FieldNumber) {
  SubscriptionState_FieldNumber_State = 1,
  SubscriptionState_FieldNumber_SubState = 2,
};

GPB_FINAL @interface SubscriptionState : GPBMessage

/** subscription is active if > 0 */
@property(nonatomic, readwrite) SubscriptionState_State state;

@property(nonatomic, readwrite) SubscriptionState_SubState subState;

@end

/**
 * Fetches the raw value of a @c SubscriptionState's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SubscriptionState_State_RawValue(SubscriptionState *message);
/**
 * Sets the raw value of an @c SubscriptionState's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSubscriptionState_State_RawValue(SubscriptionState *message, int32_t value);

/**
 * Fetches the raw value of a @c SubscriptionState's @c subState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SubscriptionState_SubState_RawValue(SubscriptionState *message);
/**
 * Sets the raw value of an @c SubscriptionState's @c subState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSubscriptionState_SubState_RawValue(SubscriptionState *message, int32_t value);

#pragma mark - ProductGroupRequest

typedef GPB_ENUM(ProductGroupRequest_FieldNumber) {
  ProductGroupRequest_FieldNumber_Id_p = 1,
};

GPB_FINAL @interface ProductGroupRequest : GPBMessage

/** product group id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - ProductGroup

typedef GPB_ENUM(ProductGroup_FieldNumber) {
  ProductGroup_FieldNumber_Id_p = 1,
  ProductGroup_FieldNumber_ProductsArray = 2,
};

GPB_FINAL @interface ProductGroup : GPBMessage

/** product group id, entitlement id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProductGroup_Product*> *productsArray;
/** The number of items in @c productsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger productsArray_Count;

@end

#pragma mark - ProductGroup_Product

typedef GPB_ENUM(ProductGroup_Product_FieldNumber) {
  ProductGroup_Product_FieldNumber_Id_p = 1,
};

GPB_FINAL @interface ProductGroup_Product : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - GetAllProductGroupsResponse

typedef GPB_ENUM(GetAllProductGroupsResponse_FieldNumber) {
  GetAllProductGroupsResponse_FieldNumber_ProductGroupsArray = 1,
};

GPB_FINAL @interface GetAllProductGroupsResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ProductGroup*> *productGroupsArray;
/** The number of items in @c productGroupsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger productGroupsArray_Count;

@end

#pragma mark - UploadUserInfoRequest

typedef GPB_ENUM(UploadUserInfoRequest_FieldNumber) {
  UploadUserInfoRequest_FieldNumber_AppUserId = 1,
  UploadUserInfoRequest_FieldNumber_AdvertiserId = 2,
  UploadUserInfoRequest_FieldNumber_VendorId = 3,
};

GPB_FINAL @interface UploadUserInfoRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *appUserId;

/** Apple's Advertising Identifier (IDFA) or Google's Android’s advertising ID. See how Facebook fetches this on iOS or on Android.  1111-1111-1111-1111 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *advertiserId;

/** appstore only, Identifier for Vendors (IDFV). */
@property(nonatomic, readwrite, copy, null_resettable) NSString *vendorId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
